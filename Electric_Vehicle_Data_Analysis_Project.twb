<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' min='1' />
      </column>
    </datasource>
    <datasource caption='Electric_Vehicle_Population_Data' inline='true' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric_Vehicle_Population_Data' name='textscan.0t5et5a1g9fwdm117qsjs1j7dzcn'>
            <connection class='textscan' directory='C:/Users/pattn/OneDrive/Desktop/Tableau/PROJECT' filename='Electric_Vehicle_Population_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0t5et5a1g9fwdm117qsjs1j7dzcn' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' hidden='true' name='[2020 Census Tract]' role='measure' type='quantitative' />
      <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
      </column>
      <column caption='Avg Electric Range' datatype='real' name='[Calculation_265430956448423937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Electric Range])' />
      </column>
      <column caption='Total BEV&apos;s' datatype='integer' name='[Calculation_265430956449439747]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]= &quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
      </column>
      <column caption='Total PHEV&apos;s' datatype='integer' name='[Calculation_265430956450414596]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]= &quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
      </column>
      <column caption='% of BEV' datatype='real' name='[Calculation_265430956450791429]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_265430956449439747]/[Calculation_265430956447289344]' />
      </column>
      <column caption='% of PHEV' datatype='real' name='[Calculation_265430956451028998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_265430956450414596]/[Calculation_265430956447289344]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
          <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
          <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
        </aliases>
      </column>
      <column datatype='string' hidden='true' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
          <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
        </aliases>
      </column>
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Vin (1-10)' datatype='string' hidden='true' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <column caption='Electric_Vehicle_Population_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/pattn/OneDrive/Documents/My Tableau Repository/Datasources/#TableauTemp_0wk0tyr1l7vexq1d9dqhv0bo7jmi.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/04/2025 12:48:21 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>0</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>638</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>2</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>821</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Model Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model Year</remote-alias>
              <ordinal>3</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>4</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>5</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electric Vehicle Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Electric Vehicle Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electric Vehicle Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
              <ordinal>7</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electric Range</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Electric Range]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electric Range</remote-alias>
              <ordinal>8</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>234</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Base MSRP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Base MSRP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base MSRP</remote-alias>
              <ordinal>9</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Legislative District</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Legislative District]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Legislative District</remote-alias>
              <ordinal>10</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOL Vehicle ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DOL Vehicle ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOL Vehicle ID</remote-alias>
              <ordinal>11</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>150482</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vehicle Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Vehicle Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vehicle Location</remote-alias>
              <ordinal>12</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>821</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electric Utility</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Electric Utility]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electric Utility</remote-alias>
              <ordinal>13</ordinal>
              <family>Electric_Vehicle_Population_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>127</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' palette='green_10_0' type='palette'>
            <map to='#256f3d'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
            <map to='#5baf49'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <filter class='quantitative' column='[Model Year]' filter-group='2' included-values='in-range'>
        <min>2010</min>
        <max>2024</max>
      </filter>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[State]' member='&quot;AK&quot;' />
            <groupfilter function='member' level='[State]' member='&quot;HI&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='Electric_Vehicle_Population_Data.csv' id='Electric_Vehicle_Population_Data.csv_5B9A6D17388D4139BBCD7100AD20CD45'>
            <properties context=''>
              <relation connection='textscan.0t5et5a1g9fwdm117qsjs1j7dzcn' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Electric Range'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Avg Electric Range' datatype='real' name='[Calculation_265430956448423937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Electric Range])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956448423937]' derivation='User' name='[usr:Calculation_265430956448423937:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956448423937:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Average Electric Range</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956448423937:qk]> Miles]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{901FBB84-822E-4ABA-A785-7790503C2F50}' />
    </worksheet>
    <worksheet name='Top 10 vehicles by make'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[pcto:usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[pcto:usr:Calculation_265430956447289344:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'> &lt;</run>
                <run fontname='Tableau Bold'>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]</run>
                <run fontname='Tableau Bold'>&gt; ; &lt;</run>
                <run fontname='Tableau Bold'>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[pcto:usr:Calculation_265430956447289344:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</rows>
        <cols>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]</cols>
      </table>
      <simple-id uuid='{0912B264-9307-4FBB-8731-D1C2A5CB8815}' />
    </worksheet>
    <worksheet name='Total BEV Vehicles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total BEV&apos;s' datatype='integer' name='[Calculation_265430956449439747]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]= &quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
            </column>
            <column caption='% of BEV' datatype='real' name='[Calculation_265430956450791429]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_265430956449439747]/[Calculation_265430956447289344]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956449439747]' derivation='User' name='[usr:Calculation_265430956449439747:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_265430956450791429]' derivation='User' name='[usr:Calculation_265430956450791429:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956450791429:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956449439747:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956450791429:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total BEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956449439747:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='10'><![CDATA[% of Total : <[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956450791429:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7DAFE71B-4075-4969-B50E-22B5D0B17C24}' />
    </worksheet>
    <worksheet name='Total PHEV Vehicles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total PHEV&apos;s' datatype='integer' name='[Calculation_265430956450414596]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]= &quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
            </column>
            <column caption='% of PHEV' datatype='real' name='[Calculation_265430956451028998]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_265430956450414596]/[Calculation_265430956447289344]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956450414596]' derivation='User' name='[usr:Calculation_265430956450414596:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_265430956451028998]' derivation='User' name='[usr:Calculation_265430956451028998:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956451028998:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956450414596:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956451028998:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total PHEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956450414596:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='10'><![CDATA[% of Total : <[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956451028998:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{87EC54E4-3E28-4025-9C3D-ED5E38E84E85}' />
    </worksheet>
    <worksheet name='Total Vehicle by CAFV Eligibility'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_601230603723497473]' role='measure' type='quantitative' user:unnamed='Total Vehicle by CAFV Eligibility'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_601230603723497473]' derivation='User' name='[usr:Calculation_601230603723497473:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9230387210845947' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk] + [federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{8604D678-77C3-44C8-B6AD-611B64F87C85}' />
    </worksheet>
    <worksheet name='Total Vehicle by Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[pcto:usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i7mryn1ash3rs1flqoe80oh0oww].[pcto:usr:Calculation_265430956447289344:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i7mryn1ash3rs1flqoe80oh0oww].[pcto:usr:Calculation_265430956447289344:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MODEL Y&quot;</bucket>
              <bucket>&quot;MODEL 3&quot;</bucket>
              <bucket>&quot;LEAF&quot;</bucket>
              <bucket>&quot;MODEL S&quot;</bucket>
              <bucket>&quot;BOLT EV&quot;</bucket>
              <bucket>&quot;MODEL X&quot;</bucket>
              <bucket>&quot;VOLT&quot;</bucket>
              <bucket>&quot;ID.4&quot;</bucket>
              <bucket>&quot;NIRO&quot;</bucket>
              <bucket>&quot;PACIFICA&quot;</bucket>
              <bucket>&quot;WRANGLER&quot;</bucket>
              <bucket>&quot;MUSTANG MACH-E&quot;</bucket>
              <bucket>&quot;PRIUS PRIME&quot;</bucket>
              <bucket>&quot;X5&quot;</bucket>
              <bucket>&quot;I3&quot;</bucket>
              <bucket>&quot;FUSION&quot;</bucket>
              <bucket>&quot;EV6&quot;</bucket>
              <bucket>&quot;IONIQ 5&quot;</bucket>
              <bucket>&quot;C-MAX&quot;</bucket>
              <bucket>&quot;RAV4 PRIME&quot;</bucket>
              <bucket>&quot;R1T&quot;</bucket>
              <bucket>&quot;XC90&quot;</bucket>
              <bucket>&quot;BOLT EUV&quot;</bucket>
              <bucket>&quot;E-GOLF&quot;</bucket>
              <bucket>&quot;E-TRON&quot;</bucket>
              <bucket>&quot;XC60&quot;</bucket>
              <bucket>&quot;PRIUS PLUG-IN&quot;</bucket>
              <bucket>&quot;XC40&quot;</bucket>
              <bucket>&quot;R1S&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;CLARITY&quot;</bucket>
              <bucket>&quot;OUTLANDER&quot;</bucket>
              <bucket>&quot;F-150&quot;</bucket>
              <bucket>&quot;PS2&quot;</bucket>
              <bucket>&quot;I4&quot;</bucket>
              <bucket>&quot;GRAND CHEROKEE&quot;</bucket>
              <bucket>&quot;KONA ELECTRIC&quot;</bucket>
              <bucket>&quot;Q5 E&quot;</bucket>
              <bucket>&quot;HARDTOP&quot;</bucket>
              <bucket>&quot;A3&quot;</bucket>
              <bucket>&quot;SOLTERRA&quot;</bucket>
              <bucket>&quot;TAYCAN&quot;</bucket>
              <bucket>&quot;SORENTO&quot;</bucket>
              <bucket>&quot;IX&quot;</bucket>
              <bucket>&quot;330E&quot;</bucket>
              <bucket>&quot;SOUL&quot;</bucket>
              <bucket>&quot;530E&quot;</bucket>
              <bucket>&quot;SPORTAGE&quot;</bucket>
              <bucket>&quot;CAYENNE&quot;</bucket>
              <bucket>&quot;C40&quot;</bucket>
              <bucket>&quot;ESCAPE&quot;</bucket>
              <bucket>&quot;EDV&quot;</bucket>
              <bucket>&quot;ARIYA&quot;</bucket>
              <bucket>&quot;Q4&quot;</bucket>
              <bucket>&quot;X3&quot;</bucket>
              <bucket>&quot;TRANSIT&quot;</bucket>
              <bucket>&quot;SPARK&quot;</bucket>
              <bucket>&quot;FOCUS&quot;</bucket>
              <bucket>&quot;SOUL EV&quot;</bucket>
              <bucket>&quot;I-PACE&quot;</bucket>
              <bucket>&quot;IONIQ&quot;</bucket>
              <bucket>&quot;COUNTRYMAN&quot;</bucket>
              <bucket>&quot;KONA&quot;</bucket>
              <bucket>&quot;GLC-CLASS&quot;</bucket>
              <bucket>&quot;AIR&quot;</bucket>
              <bucket>&quot;EQS-CLASS SUV&quot;</bucket>
              <bucket>&quot;EQS-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;E-TRON SPORTBACK&quot;</bucket>
              <bucket>&quot;EQB-CLASS&quot;</bucket>
              <bucket>&quot;IONIQ 6&quot;</bucket>
              <bucket>&quot;FORTWO ELECTRIC DRIVE&quot;</bucket>
              <bucket>&quot;AVIATOR&quot;</bucket>
              <bucket>&quot;Q5&quot;</bucket>
              <bucket>&quot;CX-90&quot;</bucket>
              <bucket>&quot;SANTA FE&quot;</bucket>
              <bucket>&quot;BZ4X&quot;</bucket>
              <bucket>&quot;TUCSON&quot;</bucket>
              <bucket>&quot;PANAMERA&quot;</bucket>
              <bucket>&quot;E-TRON GT&quot;</bucket>
              <bucket>&quot;EQE-CLASS SUV&quot;</bucket>
              <bucket>&quot;S60&quot;</bucket>
              <bucket>&quot;OPTIMA&quot;</bucket>
              <bucket>&quot;I8&quot;</bucket>
              <bucket>&quot;B-CLASS&quot;</bucket>
              <bucket>&quot;CORSAIR&quot;</bucket>
              <bucket>&quot;NX&quot;</bucket>
              <bucket>&quot;LYRIQ&quot;</bucket>
              <bucket>&quot;Q8&quot;</bucket>
              <bucket>&quot;GV60&quot;</bucket>
              <bucket>&quot;SONATA&quot;</bucket>
              <bucket>&quot;ELR&quot;</bucket>
              <bucket>&quot;EQE-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;FORTWO&quot;</bucket>
              <bucket>&quot;CROSSTREK&quot;</bucket>
              <bucket>&quot;I-MIEV&quot;</bucket>
              <bucket>&quot;RAV4&quot;</bucket>
              <bucket>&quot;EQ FORTWO&quot;</bucket>
              <bucket>&quot;RZ 450E&quot;</bucket>
              <bucket>&quot;GLE-CLASS&quot;</bucket>
              <bucket>&quot;PRIUS&quot;</bucket>
              <bucket>&quot;740E&quot;</bucket>
              <bucket>&quot;V60&quot;</bucket>
              <bucket>&quot;ROADSTER&quot;</bucket>
              <bucket>&quot;S90&quot;</bucket>
              <bucket>&quot;RS E-TRON GT&quot;</bucket>
              <bucket>&quot;RANGE ROVER SPORT&quot;</bucket>
              <bucket>&quot;RANGE ROVER&quot;</bucket>
              <bucket>&quot;KARMA&quot;</bucket>
              <bucket>&quot;G80&quot;</bucket>
              <bucket>&quot;C-CLASS&quot;</bucket>
              <bucket>&quot;CT6&quot;</bucket>
              <bucket>&quot;TONALE&quot;</bucket>
              <bucket>&quot;A7&quot;</bucket>
              <bucket>&quot;S-CLASS&quot;</bucket>
              <bucket>&quot;GV70&quot;</bucket>
              <bucket>&quot;TRANSIT CONNECT ELECTRIC&quot;</bucket>
              <bucket>&quot;ACCORD&quot;</bucket>
              <bucket>&quot;745E&quot;</bucket>
              <bucket>&quot;CITY&quot;</bucket>
              <bucket>&quot;WHEEGO&quot;</bucket>
              <bucket>&quot;A8 E&quot;</bucket>
              <bucket>&quot;745LE&quot;</bucket>
              <bucket>&quot;FLYING SPUR&quot;</bucket>
              <bucket>&quot;BENTAYGA&quot;</bucket>
              <bucket>&quot;918&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[:Measure Names]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk] / ([federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk] / [federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]))</rows>
        <cols>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9E18E31C-464A-4FC6-976B-7686D0925AA2}' />
    </worksheet>
    <worksheet name='Total Vehicles By Model Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='10' />
            <format attr='text-format' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='font-family' id='refline0' value='Tableau Bold' />
            <format attr='color' id='refline0' value='#000000' />
            <format attr='stroke-color' id='refline0' value='#00550090' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Tableau Bold' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt;:- &lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' z-order='1' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.9230387210845947' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk] + [federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk])</rows>
        <cols>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{541862FC-6486-4407-B157-CB706F61C64C}' />
    </worksheet>
    <worksheet name='Total Vehicles By State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='Tableau Bold' />
            <format attr='color' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' id='legend-color' value='#000000' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' id='legend-color' value='Tableau Bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='legend-title'>
            <_.fcp.IndividualControlFormatting.true...format attr='font-family' field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' id='legend-color' value='Tableau Bold' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
              <lod column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' />
              <geometry column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[Latitude (generated)]</rows>
        <cols>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{69DBFB3A-7763-4A2C-9766-EB517593B57F}' />
    </worksheet>
    <worksheet name='Total number of vehicles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_265430956447289344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430956447289344]' derivation='User' name='[usr:Calculation_265430956447289344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true' filter-group='4'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' />
              <groupfilter function='member' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' member='&quot;Not eligible due to low battery range&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' filter-group='7'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_265430956447289344]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' context='true' filter-group='6'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WHEEGO&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
              <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' context='true' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</column>
            <column>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='12'><![CDATA[<[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BB07935F-F665-427E-A8C8-FA71B5E12B25}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Electric Vehicle Data Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.1i7mryn1ash3rs1flqoe80oh0oww' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top 10' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1i7mryn1ash3rs1flqoe80oh0oww'>
        <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
          </aliases>
        </column>
        <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
            <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
          </aliases>
        </column>
        <column datatype='string' name='[Make]' role='dimension' type='nominal' />
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='10800' id='5' param='vert' type-v2='layout-flow' w='87857' x='11719' y='5574'>
            <zone h='10800' id='6' type-v2='layout-basic' w='87857' x='11719' y='5574'>
              <zone h='10800' id='8' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='87857' x='11719' y='5574'>
                <zone h='10801' id='13' name='Total number of vehicles' show-title='false' w='21980' x='11706' y='5575'>
                  <layout-cache fixed-size-h='151' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10801' id='14' name='Avg Electric Range' show-title='false' w='21981' x='33686' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10801' id='15' name='Total BEV Vehicles' show-title='false' w='21981' x='55667' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10801' id='16' name='Total PHEV Vehicles' show-title='false' w='21928' x='77648' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#f5f1f0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43439' id='10' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='87857' x='11719' y='16374'>
            <zone fixed-size='754' h='43438' id='17' is-fixed='true' name='Total Vehicles By Model Year' w='43961' x='11706' y='16376'>
              <layout-cache minheight='195' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='43438' id='18' name='Total Vehicles By State' w='43909' x='55667' y='16376'>
              <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f5f1f0' />
            </zone-style>
          </zone>
          <zone h='39258' id='11' param='horz' type-v2='layout-flow' w='87857' x='11719' y='59813'>
            <zone fixed-size='523' h='39258' id='20' is-fixed='true' name='Top 10 vehicles by make' w='28125' x='11719' y='59813'>
              <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='39258' id='22' name='Total Vehicle by CAFV Eligibility' w='33090' x='39844' y='59813'>
              <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='fixed' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='495' h='39258' id='24' is-fixed='true' name='Total Vehicle by Model' w='26642' x='72934' y='59813'>
              <layout-cache type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f5f1f0' />
            </zone-style>
          </zone>
          <zone h='93497' id='12' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='11295' x='424' y='5574'>
            <zone h='15679' id='25' is-scaled='1' param='C:/Users/pattn/OneDrive/Desktop/Tableau/PROJECT/240_F_524935557_JjYRXDktED3P5YlSnkAqikICzypWonqY.jpg' type-v2='bitmap' w='11282' x='424' y='5575'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='630' h='15564' id='21' is-fixed='true' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' type-v2='filter' w='11282' x='424' y='21254'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='15563' id='26' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='11282' x='424' y='36818'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='15563' id='29' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' type-v2='filter' values='database' w='11282' x='424' y='52381'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='15564' id='28' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' type-v2='filter' values='database' w='11282' x='424' y='67944'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='15563' id='31' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' show-title='false' type-v2='filter' values='database' w='11282' x='424' y='83508'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone h='4645' id='7' type-v2='title' w='99152' x='424' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10221' id='19' name='Total Vehicles By State' pane-specification-id='0' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' type-v2='color' w='8449' x='56307' y='46574' />
        <zone h='3252' id='30' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9799' x='28655' y='61208'>
          <formatted-text>
            <run>Top 10</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2450' minheight='2450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='36' param='vert' type-v2='layout-flow' w='99152' x='424' y='929'>
                <zone h='4645' id='7' type-v2='title' w='99152' x='424' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00ff7734' />
                  </zone-style>
                </zone>
                <zone fixed-size='117' h='15679' id='25' is-fixed='true' is-scaled='1' param='C:/Users/pattn/OneDrive/Desktop/Tableau/PROJECT/240_F_524935557_JjYRXDktED3P5YlSnkAqikICzypWonqY.jpg' type-v2='bitmap' w='11282' x='424' y='5575'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10801' id='13' is-fixed='true' name='Total number of vehicles' show-title='false' w='21980' x='11706' y='5575'>
                  <layout-cache fixed-size-h='151' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10801' id='14' is-fixed='true' name='Avg Electric Range' show-title='false' w='21981' x='33686' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10801' id='15' is-fixed='true' name='Total BEV Vehicles' show-title='false' w='21981' x='55667' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='10801' id='16' is-fixed='true' name='Total PHEV Vehicles' show-title='false' w='21928' x='77648' y='5575'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43438' id='17' is-fixed='true' name='Total Vehicles By Model Year' w='43961' x='11706' y='16376'>
                  <layout-cache minheight='195' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43438' id='18' is-fixed='true' name='Total Vehicles By State' w='43909' x='55667' y='16376'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='19' name='Total Vehicles By State' pane-specification-id='0' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' type-v2='color' w='8449' x='56307' y='46574'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='630' h='15564' id='21' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' type-v2='filter' w='11282' x='424' y='21254'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15563' id='26' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='11282' x='424' y='36818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15563' id='29' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]' type-v2='filter' values='database' w='11282' x='424' y='52381'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15564' id='28' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]' type-v2='filter' values='database' w='11282' x='424' y='67944'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15563' id='31' mode='checkdropdown' name='Top 10 vehicles by make' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]' show-title='false' type-v2='filter' values='database' w='11282' x='424' y='83508'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39258' id='20' is-fixed='true' name='Top 10 vehicles by make' w='28125' x='11719' y='59813'>
                  <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39258' id='22' is-fixed='true' name='Total Vehicle by CAFV Eligibility' w='33090' x='39844' y='59813'>
                  <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39258' id='24' is-fixed='true' name='Total Vehicle by Model' w='26642' x='72934' y='59813'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3252' id='30' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9799' x='28655' y='61208'>
                  <formatted-text>
                    <run>Top 10</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4989F127-D832-43AE-970F-6D29B9603992}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='37'>
    <window class='worksheet' name='Total number of vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F40DCDB1-88F0-44B5-A7D2-AB56A3266F1B}' />
    </window>
    <window class='worksheet' name='Avg Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B7BC3B27-FD97-4626-967C-3E0BBEB22E15}' />
    </window>
    <window class='worksheet' name='Total BEV Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{22F0DF66-A546-4540-AB1B-BA2CEF71EDF9}' />
    </window>
    <window class='worksheet' name='Total PHEV Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{02764259-CE08-4547-97AE-866D68FC6334}' />
    </window>
    <window class='worksheet' name='Total Vehicles By Model Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{02C09D58-77F4-4406-9061-DEB2395CEF6A}' />
    </window>
    <window class='worksheet' name='Total Vehicles By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4F4B89B1-6F82-47D9-AD72-D1EC8E15CD96}' />
    </window>
    <window class='worksheet' name='Top 10 vehicles by make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Make:nk]</field>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Model:nk]</field>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E16420A-7F59-469E-B3CE-44DE2E992566}' />
    </window>
    <window class='worksheet' name='Total Vehicle by CAFV Eligibility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9998F3D-6A64-46A8-9B87-AE5D6BD18FC5}' />
    </window>
    <window class='worksheet' name='Total Vehicle by Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A219EE13-2EC1-4D77-892A-0553078E7FC9}' />
    </window>
    <window class='dashboard' maximized='true' name='Electric Vehicle Data Analysis'>
      <viewpoints>
        <viewpoint name='Avg Electric Range'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 vehicles by make'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total BEV Vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total PHEV Vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicle by CAFV Eligibility'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
                    <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_265430956447289344:qk]</field>
                    <field>[federated.1i7mryn1ash3rs1flqoe80oh0oww].[usr:Calculation_601230603723497473:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</value>
                  <value>55942</value>
                  <value>0.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.1i7mryn1ash3rs1flqoe80oh0oww].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Vehicle by Model' />
        <viewpoint name='Total Vehicles By Model Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles By State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total number of vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='30' />
      <simple-id uuid='{E01264CA-B7C8-4107-BC7A-29A3DCEE320F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='58' name='Avg Electric Range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Data Analysis' width='192'>
      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
      sdgDn5eHgf8AIgiSW2vmx84AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 vehicles by make' width='192'>
      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
      GTc6W7jdbmpra9E0jQ984APY7XYkSeK5557jzjvv5NVXX+Waa67B4XCwe/duNm3aRCKRYG5u
      jpMnTzI3N0cqleL5559H13U2btyILMsLf75v3z7C4TDPPPMMbW1tdHZ2rvYpn3cWHYAil4PO
      nn78gTAlFdWsrTu1jNHucGI1m6kszqFvIozDLFNUVISkqtjtZvr6B4gk05BOMDLqRZcUnE4n
      snzu7ws2OjpKa2sr+/bt44tf/CKlpaUcPnyYuro67rnnHsrKyvjKV75CSUkJqVSKo0eP0tnZ
      STKZJDc3l/r6eqqrq9m6dSvPP/88Bw4c4ODBg6RSKWpra7n00kv52Mc+xmWXXUYymWRqamq1
      T/m8s+i5QLquk4jHUMwWZCRkGTQdYrEYismMzWohlU5jMSmkNZB0DUlRSMSimK120NLEEyms
      FhOJZAqrzY4s6ciyCUk6t9YDvP+C69mx5koSiQShUAir1UoymUSSJE6cOEFzczOBQIDc3Fz8
      fj+KolBQUEAymURRFI4cOcLGjRux2WwEAgHcbjfRaBQ4tbDI6XQSi8Vwu92k02kURSEUCpGX
      l7fk7sJqz73JtjpZMxnuXAzAYqz2/2BR5+2Ju0CCoYkACIaWNVMh7CY7Lmt+BirpQCYG2P+5
      jtVky0B9IRtkzRhAbJAh6qxGHdEFEgxNBEAwNBEAwdCyZhD896F9HJk4uOQ6ixkC1xes5Yam
      /17ysYRzX9YEIJQMMhnxrcixPPbCFTmOkP1EF0gwNBEAwdCWrQuk6zra6zst/vNRgyRJb/gz
      XdeRZXnJc9zPlqZpqKqKJEmYTCZ0XV+4n6yq6kLbNE17wzOK198nyzKKoqCqKrquoyjKwrz0
      159raNr59fXv55tlC8BUfwejCTM1hbmMjE+ip1PUVXno9EbJsZqQkyFMdge23ELWVJYsVzPe
      1vj4OPfffz9DQ0M89thjPPPMM+zdu5ePfOQj/OxnP6Ompobt27fz97//nfvuu29hZufhw4d5
      5JFH+PznP8/27du5/fbbmZ2d5fbbb+eb3/wmDz30EPfeey+XX345DoeDHTvE7pHZahm7QDqa
      qhIIBKhuaGRdlYvpcJpEPIbVbsdsz6GpaQPJSGD5mnAaVVVVvOc97+HWW28F4MCBA0SjUZ56
      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
    </thumbnail>
    <thumbnail height='81' name='Total BEV Vehicles' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='81' name='Total PHEV Vehicles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABRCAYAAACE5qnhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAcJUlEQVR4nO2deXhU1dnAf/dOJpPMkITsC0lIDAkQIGxh3xRRliAYK6liqRuloqVtvqct
      iraCrX5q+1HF7/MRS6mlikpERFkqIHsIBGRJCJBAJPsy2ciEZJjt3u+PSa4ZkkCCKaC5v+fJ
      P/fs95z3vO95z503gizLMioqPRTxVndAReVWogqASo9GFQCVHo0qACo9GlUAVHo0qgCo9GhU
      AVDp0agCoNKjUQVApUejCoBKj0YVAJUejSoAKj0aVQBUejSqAKj0aHqMAJSkpZEmCKQJAiVp
      abe6Oz9IbCYTu8eNI00QyEhJuW7+mowMPvPxIU0Q2D1uHDaTqUvt5SxfTpog8JmPDzUZGTfU
      5xsWgJbGr/d3IwMD15d5o3XcCOaSErZERLQZx0adji/j4/lm9WocTU0uZTJSUq45Ea3fVWvh
      ay2U13t/F9esIU0QOP/GG+32u/jjj/lEoyFNEDiZmtomvSEvjy9CQkgTBPZNm4bDbG6Tp6mo
      iK19+5ImCOwYOhRrTU1XX9/3jh6jAb4rktWK6exZvn7qKQ4kJWGtq7up7fuNHo27vz+Vu3Yh
      2Wxt0it37UKWJDSenoTNnt0mXR8RgffgwQCYTp+mqbi4TZ767GyulJcDEDR1Ku7+/t08Clf8
      x43j/vp65skyUzMy0Hp7/0fba48bFoBBy5czT5aVv/B58wDQensz9dAh5fmtGlh34D92rDJB
      s0tL6ZOcDEDV3r1cXLOmW9uKf/FFl/d59fvTR0XhFRvrskhbsNbUUJuZCbgu9NZoPD0JmDgR
      AEtVFZdOnGiTp0W4RK2W4GnTunV8tys3VQPIkkTljh3sSkzkEzc3PtFo2BoZybnXXnMxK3KW
      L3eaE4cPA1Bz+LBiK26JiMBcUgJA48WLnExNZVt0NJ+4uZEmCHyq17P/nnsw5eR0a989w8JI
      eO01PMPCACj7/HPsDQ3d2sa10Hp7Ezx9OlfKy6nPznZJM5eWYi4tBcB/wgR0gYHt1hEyfTpa
      b2/nPOza5ZLmMJuVevVRUfQePtwl3fjVVy7ztj02ltJNm5AlqcM+NxYUcOSRR/hUr+cTjYZd
      iYku89La3Lz6zKCslVGj2KjTkSYIfB4czMnU1DYmaHuYcnLYd/fdStktffpwftUqZIfDJd9N
      EwBZkjj3yiscmDWLuq+/RnY4kCWJpuJisp99loyUlC6bFVlLl3L+jTdoLChQBuYwm6nctYv0
      uXO5nJ/frWPQBQejj4wEnJN3s84lLQROmoRks7VZvLWZmVhrahBEkZDp0xHE9qfVKy4OfVSU
      S5kWmoqLMZ0+DYDviBF4hIQoaYXvv8+BpCSXebt84QIZ8+Zx4X//t922Knfs4MtBgyhavx6H
      2YwsSdR9/TWZP/0p1traa45TliTOvPQSB2bOpO7YMSSrFQCL0UjJJ59ct3z1wYPsmTQJ4+7d
      SllzWRmnUlM5sWSJIrSSzXbzBKD2yBFy//xnZIeD0FmzuK+sjB9ZLAx8/nkEUaRi+3YK/vEP
      wGle3V9fj//YscBVpkhxMZ7h4QBovbyIWbyYGefO8aDdzoN2O8NXrULU6bicn0/hv/51s4Z3
      U+g9bBgAtYcPK8LXejf3CAnBd8SIDsu7+/sTNHUqAE0FBTTk5Slpl06cwFJV1UaILp8/T/bS
      pUgWC/7jx3NfWRnJJhORDz+M7HCQ+9prXD5/vk1buoAARq1dy/319TzQ2EhoUhIAjYWFigbv
      iPKtWzn36qvIkoTfmDHMzMtTzNB+Tz+N6O7eYVlrbS0nf/UrrHV19IqJ4d7sbGWdARSuW0f1
      /v0ANJw9e/ME4OLatdhMJtz9/Bj0xz/iERqK6O7OgOeeI2DyZGRJouiDD64r3a1J/PvfGfH2
      23j174+g0SBoNETOn49X//4AmM6c6dYxmEtKuPzNNwAYYmJw9/NzSbeZTOweP76NJ+fMihXX
      rfvMihXteoFyli9X8rQcShvOn6epoABwted7Dx+u7PAdETxtGqJWi81kovbIEeV5yyFaFxiI
      /4QJyvPyrVsxl5XhZjAw5OWX8QgNxc3Li7jf/AZ3Pz+uVFRQffBgm3Z6jxhBxI9/jNbbG41e
      j29iIgCyzYa9sbHD/kk2Gxf//nckiwWP0FBGv/cevWJjAacZOuC559AFBXVYviYjg/rsbARR
      ZODzz+MzeDCiuzsxTz+NISYGe2Mj5du2AWBvbLw5AmBvaKDh3DnAqYZ79eunpLkZDAQ0v/DO
      7A6tcTQ18c3q1XwZH6/YepsDAqjPyureAeDcCb9etAiL0YggikSkpKDx9Oz2dq6HIIouh97W
      Hp2WxX0tfIYMwSM0FPj20Nu6Pu/Bg9FHRCj5a48eBUDr6+syb4a+ffEMD0eWJC514/u2GI3U
      nzoFOL1EveLiulT+0smTSDYbbr164TVggPJcFxiIV3NdpjNnkGw2esXE4NZtPb8Gsiwj2+0d
      pgtuzm5cb3dojc1k4lByMsbdu7ulj+3RcvhujSCK9F2wgKhHH22TX+vtzaR//xv/ceNcnucs
      X35dLRD/4osMarXbd4RneDhNRUVU7tpF1BNPUHXgAA6zGXc/PwImT+5Uef9x42gqKlI8SubS
      UkWjhEyf7iLYLS7XlgNre7QcwLsFWUZqXiuCRtPheaYjWvrboo3bw1pTg8NsRhcUdHM0gCAI
      yiJvjxbhELRa3AyGTtVZfeAA1QcOIIgiUY8+yuzSUubJssvZoTvReHoSeOedTNq+ncS1axF1
      um5vozP4DBkCOG32pqIixfy4WrN2hCCKiouzxaNUe+QINpMJrbe34iq9ZQgCYsuG2Hzg/k9y
      UzSAm5cXXgMGUH3wIA15eVy+cEE5rNkbG6lOTwe+VaudofboUSSbDc8+fYhfvlxxT3Yn/mPH
      MunLL2+re4w+99/vtMvLy6lJT1dMy4BJkzrdz4DJk/EIDuZKZSXV6ek05OYC0KtfP+X81ELv
      oUMpSUtDFxTEnXv24B0f370DugpdUBA+Q4fSWFBA7eHDNObnK2eAztA7IQFBFBF1OsZ/+ikh
      M2Z0mPemeoGin3gCrbc31tpasp99livl5TiamjizfDnV+/cjiCKRjzyiHCw1np7Koc905gzG
      3buRJQl7YyOyw4G+WVAsRqOS1njxIlm/+1232qS3Gy03wvaGBs6+/DIWoxGNpych06d3uo7W
      l2WF//yn4hUJmDy5zcE+NCkJXWAgFqORjJQUajMzXVzY5994g/x33um28YlaLdFPPomo02Eu
      K+P4L36heJnMZWVceOstLEZjh+Vbzg0Os5ljP/sZZZ9/7uJGLVy3jtO//z0AdceO3TwB8Bsz
      hv6//S2CRkPlzp18ERbGpwYDuX/5C7IkETJzJlGPP67kF7Va+i5YgKjTKfb+JxoN/x4wgCvl
      5QROmYJnWBiSzcaxJ5/kE42GbXfcQeXOnW0m8ftAR16gq7+DMsTEKGaQ6exZJJutw9vfjmgt
      MOayMizV1R3e/vokJBD7y18iaDSYcnL4aswYl0vMk6mpXKmo+I6jdyU0KYn4F15wrpUdO9ge
      F6dcZp17/XVlQbeHR2go8b//PRq9HnNJCelz57pcpGU++qii8eAmXoQJosiAZcuYtG0bviNH
      KgccfUQEQ159lXEbNuDu6+tSJnzePBLXrKFXv34Iooggiuj8/RE0GnrFxjJ2wwa8BgxAEEWn
      e3XFCqampyva4YeIm8FA4JQpLs+udfvbEQETJ7qYTO3d/sJV85aYqPjgBY0Gr/79iX/xRe5Y
      uPAGRtIxHbWpCwoi/MEHr7vBRc6fz9T0dIKnTVMO9C1rrd+SJQx+6SXAqU0FNTq0Sk9G/RpU
      pUejCoBKj0YVAJUejSoAKj0aVQBUejSqAKj0aFQBUOnRqAKg0qNRBUClR6MKgEqPRhUAlR6N
      KgAqPZqb8oOYHwqSJFFQUMBnn31GRkYGJSUl2Gw2NBoNwcHB3HfffTzyyCPo9fobyt8Z3n33
      XTZv3kxVVRUA/v7+jBo1ikWLFhEeHo7RaOSxxx7DeI1v5gGCgoJ47733CLrqB+Z1dXWkpaWR
      lpaGVqttN88PCVUAuoDZbOaPf/wj2VcFpnI4HJSVlbF69WqOHDnCypUr8fb27nL+61FSUsK7
      777r8qyqqopt27YxefJkwrvwGXivXr1wa/7poSRJ5Obm8uabb3LixAkczTGWfsgLvwVVALqI
      wWAgOTmZefPmER0djVarpa6ujldeeYU9e/Zw8uRJtmzZwvz5828of0c0NjayYsUK9Ho9qamp
      zJ49G41GQ2lpKVu2bMHLywtwLtptzWE/rmbVqlWsW7cOgNmzZ+PX/F396dOnWbJkCY2Njbi7
      uyOKIrZ24o/+IJFVuoXCwkL5nnvukUeOHCkvXbq02/Nv3rxZHjVqlLxx48Yb6p/RaJSTk5Pl
      kSNHynPmzJFLS0uVtOzsbPlnP/uZvHPnTrm2tlZ+7LHH5JEjR8ozZ86UKysrb6i97wuqBvgO
      SJJEVVUVO3bsYO3atTQ0NDBs2DCWLVvWLflbaGhoYOPGjUiSxIULF0hKSqKqqgpBEIiLi2PJ
      kiWMHj26w/Imk4nU1FSKiooICAjgzTffJKxVEIHBgwcrplVjJ8PS/FBQBeAGyMrKUkyGFvR6
      PT//+c9ZsGABHh4e3yn/1ZjNZuXQu2HDBpe0s2fP8utf/5oXXniBWbNmtVt+79695DWHQRw/
      fjyRzfFNVVQ3aLdhsVg4ePAgua1+cN2d+VtYvXo16enpZGZm8vrrr+Pt7Y3VamX9+vWY2gnW
      azab2bp1K5Ik4e3tTUpKCmIXg039kFHfxA2QkJDAvn37yMzMZPv27axYsYLw8HBycnJYvHhx
      m0NoV/NfjZubm6IlBg4ciE6nQxRFpk6dykMPPQRAcXExBc3R3VqTmZnJqeZQg8OHD6dfJ4Jn
      9SRUAfgOiKJIYGAgSUlJvPPOO0RGRmK1WklLS2vXlu5q/hYMBgMhzeHKr97l77jjDsDpWr3a
      c2O1Wtm8eTN2ux1PT0/mz5+vuD5VnKgC0AVsNhtSB6H6PDw8FFdkfX09Fouly/k7QqfTMbY5
      3OOhQ4dc0rKag4Bptdo2Z4ns7GyONge3TUhIIP4/HNXt+4gqAF1g3759JCcns379esrKypTF
      bTKZWLNmDWfPngUgOjoab2/vLucHqK2t5YEHHiAxMZHHH39c0QzTpk0jMjKSNWvWcPz4cSRJ
      IjMzky1btgAQFxenaAMAu93Opk2bMJvNuLm5kZKSguctiGZ9u6Pqwy5SWlrKypUrWblyZbvp
      UVFRpKamKqZGV/NnZ2dTVlYGQN++fdE1B+ENCwvjD3/4AwsXLmTRokUudfTu3ZtnnnnGZYFf
      uHBB0RZDhw69ppv03XffbXPDDGA0GhXPksFg4K233iIhIaHDer6PqBqgC4wfP57nn3+eYcOG
      4dMqbLpWqyU6Opply5bx/vvvK58kdDW/JEns27cPu91OeHg4CxcudLHZhw0bxowZMzA0R9A2
      GAzMmDGDdevWuSxMSZLYvn07JpMJURRJSkpSd/8OUCPD3UZUVFSwcOFCamtrWb58Offee++t
      7tIPHlUD3EZkZWVhNBqZPXs203rIvym91agCcJtgt9v58ssv6devH4sXL1Yvq24Sqgmk0qNR
      txmVHo0qACo9GlUAVHo0qgCo9GhUAVDp0agCoNKjUQVApUfTIz+Gk2WZPScK+NeOLGpNZoJ8
      Dbz682n4e9/e38vU1DfxxGuf87uHJzBhSMSt7s4PglsuAEWV9azccJjCiktEh/ny6wfHEBn8
      7YdjTRYby9fuRQZefGwKvTzdv3Obx3LLePuzo9jszs+THZIMV90HfvjVaT766vQ16/k+LkS7
      Q+JAVhGbD+ZSbKzH7pDw8nRnyvAofnJPAp66llhBMicuVLBp/1lyi2uw2hy4azWMjQ/nsRlD
      8ffpOJhXRe1lvkjPI/NcKdX1TUiSjF6nZUT/UOZPG0KfAC8lr8XmYMuhPLZk5FFrMuOmEYmP
      CuSJWcOIDv323+aeOF/B258dpbq+iZFxoSyem+jSh8q6Rn6/ZjexEf78+sGxaN06Z9zcUgGo
      azDz2vp0Sqqcv3LKL61l5YbDrHjiTnwMzs+AD5wqoqSqgRd+OqlbFj9A5tkybHaJAZEBPL/A
      Wa8gdEvVHdIiyLnFNTx092Aevrvz/9i6uzBb7Lz8rwNkf1Pp8rzBbGXLoTyMtY38bv4EtG4i
      qzYeYc+JApd8VpuD/acKKTaaXOboavacKGBLRp7LsyaLjYNZRWTnV7LiiTuJDvXFZpd4e9NR
      9p78th27QyIrv5Kl7+ziVw+OZcKQCC6W1/HXDRnUNzp/NHT0XBkCXyt9lWWZrRl5yMAj9wzp
      9OKHWywAx86VUVJlYvb4OH46fSirNh7hUHYxZwqqGDconLoGM5+n55I0LpaBfQO6rd3GK87/
      ND4sNgTvDibx4VaLND27mNc/TMffR8+fn5p2zd3vdkZGxmqzE+RrYMG9CYyND8dNI7IlI49/
      /vsUOQVVFFTUERvuj9XuwODhzvx7BnPnsCgMHlqOnC3lzbQjFFZcUuaoPXwMOlLuGsSdw6MI
      9euFIEBeSS2vrU+npr6Jw2dKiQ71JbeomsNnStBpNTyTPJpJCZE0mK28/dlRDueU8GXmBUYN
      CGP38QIamqw8NTeRiUMieOmf+136WlBxiQNZRSy4N4Ewf692+9QRt1QAqk1mAOL7BqLTahg/
      KIKDWUUUVFxi3KBw/p2Zj95Dy9yJ/RE6sUVbbA4+O3COL9JzaTBbcddquGt4FI/OGIrBw52a
      +iZ++84uauqbAPio2cz5rgv7eu2eK6pmxT/20WSxubQL35pR50tqSNt7hux8I00WG6IgEBbg
      xcLZIxgeG9Kpfrz+YTrp2cUdjkdAIHnyQEbEhaLTapTnif3D2LjvLFesdixWZ1jEsfHhPJM8
      CoPHt1p3UFQgQb4GCiouKWNpj1ljY9s86xfmS3RIb+XdA9Q3WrhitRMX7k/igFBEUcDHoGNy
      Ql8O55Rw2WzFandQY2rCw92N6NDeeOl1jIgLJa+4BmNdE3eE+vLp/nPERwUyKaFvp95Ta25b
      L1BJlYkDWUXcNz6ON9IOk/zCxyxeuZUT5yvazd+iTtfvyqbB7NzhrTYHX2bm89y7u6lrMP9H
      +tld7R7LLefImVJlYUmyTEmVib9uyOBieV239NVT58a4QeEui99ml9h8MJdLl6+g99Di5+N0
      BEwe2tdl8cuyzI6j31BSZcLD3Y3g3oZOtSlJMsa6Rv61I4tT+RX4enkomiM23I+wAC8uVtSx
      50QBkiRT32hhb7Pp1S/cD4OH9pr1Z180crH8EpMSIlm6ehfJL3zMf/3fDooq6zvVv1uqAYJ6
      GxAFgTOFVSQOCONQTjFuGpF+fXz5PD2XoTHB7DtZyLFc508Ey6ob+OuGDMWGbM3x8+UczC5C
      6yby1JxEpo6IJr+sjv/+4CCFFZfYe7KQ5EkDWLt0jrJTdoct3tl2//7snGueAfoG+7BswSSG
      3BGEXqclt7iGl9ftp77RwrFz5W3G2x2U11zmzx8dIr+0Fq2byP0TB7RrQpgaLby1MVOZh7tH
      R1/XJL1a24qiwMi4UBbdN5IgX6fwBPkaSJ03lj9/dIi/fXGcv31xXMl776gYHp85HEEQCOpt
      4IrVzsXyS/QJ8OJ4Xjleeh3+Pp589NVppgzty0df5SgbRX6p09z608K78PW6tmfvlmqAEXEh
      hAV4seVQHikvpnEwq4i4CH8EQeBi2SUSYoI5U1BFYv8wPl7+ICl3DaK+0cLhM6Vt6jr9jRG7
      Q2JoTAh3DY9CFAViw/2YOiIKgBN55Vhtjm4fQ3e1O35wBGMG9kGvc+54ceF+xEcFAmDvILLE
      1fzu4QlsfuUh1i6dc01zTpJkNu47y69WbSe/tBZPnRuL545izoQ4l3yyLJOeXcxT/7OVzHOl
      aDQCKVMH8fjM4Wg0XVs6kiSTX1ZHVn4lkiQr9VddaqLRfJU5JTsFqKn5rDZlWF+89O68s/kY
      P/nTJvKKaxg1IIziynpEUcTP25PCikvMHh/HhhXzmJgQSVl1AzkXq67br1uqAXy9PFk6f4Li
      Bu0X7seTScN5e9NRpo/uhyTJNFls9Av3w8PdjZH9Q9lyKI9iY1v1VmNy7jQ6d43L5ESHOHfO
      K1Y7dknCHU2bst+FzrZ7PVrMhBPnK2ho6jhEynfFZpd4+7Oj7D1RgCTLDI8N4en7Rym7cguy
      LJO29wwffnUaSZKJDPbhv1LGdloT+fvoWbt0DrIsU9dwhUOni3l/Zxb/t+koNSYzP546iGO5
      Zfw1LQOd1o1nH5nImIF9XA7BqzZm8txPJhId6ktqyjjFDTpmYB+mj47hjbTDPDU3kbOF1Uiy
      3OYsWVzVNlLe1dzye4DIYB/eWDIdcL70f2w/iZdex5Rhffk6t7zT9fh7O3c8i9WBwyEpi/Fi
      hVMteri74fYf+JVVZ9u9lhDUNZhZ8d4+Ll2+wi8eGM2YgX0QRUEx1bqTbYfPs/dEARqNwJMz
      hzNrTCyi2NbBcCy3jA17ckCG5EkDeHjaEJezQ2cRBAE/b09mj4/jUuMV0vac4eSFCuZM6E9u
      cQ02u8SIuEBlzD4GHfeNj+Pk+Qryy+qoqL1MVEhvhseG8Lff3gc4hfj19ekkxAQzNCaYs4XV
      N/w+bqtD8Kn8SvaeKCB58gA83N3w9/FEr9OS/U0ljVesfJ1bTpPFRkSQT5uyg+8Iwk0jciq/
      QjlQnS+pZffxAgCGx4XifgMTeD06265epyWgt1NYTp6vwNRoQZJk7A6J0qoGquub0HtoiQh0
      xgfK/sZIQUXnDnItvP5hOnOXfcQTr33u4m1p4bLZyr6Tzp1/+qh+JI1tf/E7HBI7j32DzS4x
      LDaER+5J6HDxf/jVaeYu+4iHV2zkXFE1TRYb//NxBtuPXKDWZEaWZWRZprCynsM5TtNVr9Pi
      7ibirXe6oHMuVnHkbCmSJNN4xcoXh/K4YrXjqXPDS9/WTb37+EXyy2qZM8HpHYwI9EYUBI6e
      K8Vic3Aopxix+fn1uOUaoIW6BjN/++I4Q/uFMCTa+Z9JokJ6Exfhz8kLFcx/6VPA6WMeG9+n
      TfkRsaFMHBLJ3pMFvPVpJm99mqmk9Q3pzZ3Duu4i6wxdabd/RAAZp0s4V1TNgpc3AU67PTzQ
      Cw93N4x1jTzzxrXjhH4XquubMF5yCsaWjLw2l1Ut/RkUHUix0Wk+HM8r58E/bGiT71oOhMra
      y+w/Vcg7m4+1Sevl6c6PpgxEoxEZGx/O9iMXKKtu4NUPDrrkEwWBaSPvaPN5ysXyOj7YmcXM
      sbGENy/wQdGBhAV4sedEgXJ5Fx7ozaDowOu8kdtEA0iSzAc7s2losvDA5AGKGeHh7sYvfzSa
      wdFBil88NWVcu3ao1k3k6eRRzJ82BK/mG2N3rYbpo2P470VTr+sNuFG60u6ssbE8dPdgl3zu
      Wg2RwT48OmOocrMa7GvgVw+O6fCi6Ua5YrXjcFz/POJwSFhu0GGgc9Nw34T+ijerBb1Oy8SE
      SF5ZdLdyuA/yNfCXp+9h9rg4fHo5wzqKokBMHz/+8NgUUu5yDeXYZLHxj21OE3nG6Bjlua+X
      J795aDwRQU5NENPHj6XzJ3RqztUfxav0aP4fkz27E5GjR4sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicle by CAFV Eligibility' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vehicle by Model' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles By Model Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZEklEQVR4nO3deYwc5Z3/8XdXd/U53T33TM9tbCDgsF5zLAkCJCJEEFFAClGs3awircJu
      QODNHtpcm4vFqyUbhSPaSD8Ss4SY9QI/hyuA7wsbczgctrE9M56zPVfPTPfM9PTdVU/9/uhx
      g38xtvH4wvV9/TM99vTzPFX9fKqeqq56ymFZloUQNqWd6wYIcS6VAzA7O3su2yHEOVEOgIyE
      xKefwasvvYKhDF5e8wK5o/5Pse+D/eXf9u37AMss4DrbTRTizDEZ7jtIT+8lfLC/i+bL3mNq
      bJKm9oUM9BwiNjVLenqCVEFjJjnNFVd8Vo4BxIWldeFC3trxBu3tLRzqj3LlZR288/YuAvUL
      qHBrvPPue/gDPo4MeBxHzgIlk0lCodC5bLsQ82QyNhYnk0nhc7kI1Ybp7Bxg8Wcvo6fzAJ5g
      NQGtQCIL4QofrS3NHwYgFovh8/nO9RIIcVaVjwF8Pp/sAYTtyDGAsDUJgLA1CYCwNQmAsDUJ
      gLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsLXyDTFKKQzD
      OJdtEeKsKwdA0zRcLpkkQtiLDIGErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK3JrBDC1mRWCGFr
      MgQStiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYB
      ELYmARC2JgEQtiYBELYmARC2JgEQtla+CdiyLCzLOpdtEeKsOyoASqlz2RYhzrqjZoVwOp3n
      si1CnHVyDCBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsrXxPsFIKwzDOZVuEOOuOuine5XId72+FuODI
      EEjYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA
      2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JrMCiFsTWaFELYmQyBhaxIAYWsSAGFrEgBhaxIA
      YWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrR90AsHXrVtasWcND
      Dz2E0+nEMAwMw8Dj8VAsFtE0jUKhgM/nwzAMTNPE4/GQz+dxu93lewoMw+BHP/oRd955J2+/
      /Tb79+9nxYoVOBwOvve977F06VJM02Tv3r3cdtttpNNpnE4nX/va187VehA2dVQAduzYQVVV
      FRs2bGBkZITh4WGi0SiXXXYZr7/+Ot/61rf4zW9+w9VXX82hQ4cwTZNFixYxMDDAN77xDaqr
      q3G5XFx++eVceeWVZLNZotEoN998M11dXeTzeW6//XZ27NjBF7/4RbZv3042m+XBBx9k06ZN
      52odCBsrD4EKhQIHDhxgZGSETCbD008/zQ033EBXVxeWZbF48WKampoIh8OkUikKhQJKKdLp
      NCMjIxSLRRwOB5qmkc1mWbduHWvXrsXj8fDyyy+X9yBr1qzB6/Xyxz/+Eb/fz+zsLHfffTfP
      PvvsuVwPwqYclmVZADMzM3i9XnRdLw99fD4f2WwWp9MJgK7r5HI5nE4nK1asQNM0fvjDH5aH
      QE6nE6fTWQ6Gpmnl4ZOu6wDl18VisVwmgGEYeL3ec7EOhI2V9wCrdqxiMj0JwGObH+PA6AEs
      y+LVva+y4YMN6LrOG91v8NSup9B1nb+5729wfrbU4Z26k3/43T8ApZvrf/zsj5kpzODz+Xhs
      02N8MPwBmqbx0jsvsXH/RjRN4/3o+/xu5+/QNI3DicM8+IcHUUqRK+RY9vAyikYRpRT3PX4f
      /eP9KKX42Qs/Y8fBHSil+J8d/8P/7vxflFJs37+dn7/0c5RS9I718u0nvo1Sinwxz7KHl1Eo
      lvZWf//ff09frA+lFP/54n/y2oHXUEqxeudqVu9YjVKK1w68xs9e/BlKKfpifSz/7+UopSgY
      BZY9vIx8IY9Sim8/8W16xnpQSvHzl37Otv3bUErx9OtP89RrT6GUYufBnTz4Qmm5BsYHuO/x
      +0qTD5gGyx5eRraQRSnFP/72Hzk0egilFL/4wy/Y+sFWlFI8s+sZVm1fhVKK1ztf5z+e/w+U
      UgxODHLvyntRSmEqk2UPLyOTz6CU4p+e/Ce6R7pRSvHQyw+xed9mlFI8u+tZntz+JEopdnXt
      4t+f+3eUUhyePMw9v7kHpRRKKZY9vIxULoVSin/+3T/TOdyJUopHXnmETXs3oZRizRtr+O22
      36KU4s3uN1nx+xUopRiKD3H3r+8ul/WXj/wls9lZlFL8y6p/4eDQQZRSPPrqo2zcsxGlFL9/
      8/c8sfUJlFK8degt/m3Nv6GUYjgxzN899nflsv7q0b8imUmilOI7T32H/Yf3o5Til2t/yfr3
      16OU4vm3nufxLY+jlGJ3z27u/7/3o5RidGqUv/0/f1su669/+ddMp6eZzc7i/OlPf/pTgGKh
      SGtdK7pTx6k5aa5uJuAJ4NSc1IXqqApUoWkalf5KGsINOHAQ8AZorWkFwO1ys7BhIQAup4v2
      2nbcrtJeoam6iQpPBZpDoz5UT1WgCofDQWVgriyHg4CnVJbD4SDsD7OwsVRW0Buko74Dt8uN
      z+OjraaNCm8FHt1DU1UT1RXV6C6d+nA9jeFGNE2jOlhNW00bQKmsuXZV+CpYULcAt8uN3+2n
      tbaVCm8FXt1LpCpSLqsh1EBjZSNOzUlNsIa2mjYcfNguBw4qvBV01HXgcXk+vl3OuXbNlVVd
      UU1b7Vy7fKV2ORyl9bigfkGpLLeP1ppWgt4gHt1DpCpCTUUNukunLlxHpDKC5phbxrmyQr5Q
      uaxyu3QPfo+flpqWcllNVU2lspw69aH6UlmaRnVFNe217aWy/KWyNIdWalfdAjz6R9rlm2tX
      ZYSaYKmso9r1kbKC/iCLGhaVy+qo68Cre/G5fbTUtBDyhfDoHhorG6kN1uJyukrtqjpGu3wf
      tqvCW0F7XXu5rNbqVkK+EG6Xm0hVpFxWXaiOpqomNIdGVUUVHXUdR7XLpbk+HAIlk0lCodBp
      3sEIcXYZhsH9999Pe3s7d911Fw888ACRSIRUKkVXVxc33ngjMzMzfPOb30TXdfkeQFxYlFLl
      M5gAPp+Pffv2cccdd3DttdfyxhtvEI/Hy1MAyURA4oLidDpZsmQJbW1tbNiwAZ/Px3XXXUc0
      GuUrX/kKra2t5HI5isUiPVNdMgQS9tQ1fpDHdj8iewBhL5Zl8e7QblbvfYJKf7UEQNjHVCbO
      pp517Bjcgsvp4pK6SyUA4sI3k51ma98GtvVvwunUuKj2Yqr81WiaUwIgLlzpfIqtfRvZ1r8R
      haKj5iIagqXvZI6QAIgLTqaQZnv/Frb2raegCrRXddAQiuDS/rS7SwDEBcGyLApmnm19m9na
      t56MkaGtqp2mcMsxO/4REgDxqZctZtnRv4WNva+SN/O0VLbyZ5VLj9vxj5AAiE+tTCHNjv6t
      bOlbT9bM0BxupaWyDd2pn3QZEgBxVsViMTweD5WVlczOzpYfzWVZFl6vF6UUwWAQh8PxsWVk
      i1l29m9jS/960sUUzeEWmsN/jtvl/sTtkW+CxVljmibXX389y5cv56tf/SrLli3j5ptvZvPm
      zXz+859nZGSEuro6vv/97x8zAAWjwM6BbWzpW0eyMENzuJXmcOspdfwjZA8gzhrDMLjtttt4
      5513WLp0KR6PhwMHDnDjjTeyZ88eGhoayjdffZSyFK8PbGdjz6tM5eI0h1u4LLIY3XnqHf8I
      2QOIs8ayLHbt2sXFF1/M7OwslmXhdruZnJyktrYWy7IoFossXFi6t8FUBn8ceptXu18gkYvT
      FGqmtbId3akfd4j0SUgAxMfKZDIsW7aMhx56iHg8zsqVK/nSl77EU089xZe//GU6Ozu57rrr
      uP32209bnZZlUTSL7Bl9h3WH/sB4eozGUBNtVe24nZ7T1vGPkCHQGaCUYuPGjdx0000kEgm2
      bNnCpZdeSldXF5/5zGeoqqoCYMGCBee4pcf3/PPPMzMzw/79+2lvb2dycpKRkREWL15MIpFg
      796985rKxlQGeSNPupBiMj1BPDPJnpF36Z/uJacyNFQ0cnXb5/DpvtO4VEeTAJwBmzdvZuXK
      lVxzzTXs3LmTJ598kkceeYTOzk7y+TxPPvkkzz333Llu5gl9/etf55prrqFQKJBOp7ntttv4
      whe+wNq1a7nlllu45ZZbyGazx3yvZVkoS2Eog2RumvFUjEQmTiI7SXzu53QuQaowS87IoWla
      6XZchxMLi6ta/oKAp+KML6ME4AxIpVKk02nWr19POBympaWFZDJJZWUlixYt4qabbuLAgQNc
      f/3157qpJ3TJJZeUX1977bUALF++vPxveSNPbHaUyfQEiUyceGaCRC5BPD3BdC7BdG4K0zLR
      NA2304PH5cHr8uLVfdRU1NKst+J1efG4PLicOpZlYVkKTfvTg+EzoXwMMD09TTAYPCuV2oFp
      muXXSilcLheWZeFwOOY+ZOuYZzzOR5alSGQTbD60jvF0jApvBfHMJFPZOMn8DBZWaVZATcft
      dJc7+Ic/fXh1D5qjtLwOTu84fj6OmhdIAnBmJDJxXJpOyHv6TjLkcjni8ThNTU04HI7yOfRc
      LofX66VQKGCa5imd2MgZWSZS4/TEu+lLHKJvqofZwlxHd2hUB2pLnfsjHd3t8qA5NDTHp+s2
      8/IQ6MisbuL0sSyLgUQf/7XrFxjKYGnTVTQGm2gOtxEJNRH0hHA73ad0ZuPdd9/lBz/4AatX
      r6arq4sVK1bwwAMP8Oijj/KTn/yE+++/n+9+97tcffXVxy1HWYpMIU1/opeBqT76pg5xeHqA
      jJHB7XIT8oapC9Wx0LsIj8uDAwdul+dUV8l5R44BzgDLshicGmBt1wt8MLEHvztAtbuKnpku
      9k2+V54QK+CuoM7fQENFhEiwieZQK03hFqr81ThwHDcYHo+HRYsW0dXVRTQapaWlhd7eXmpq
      ahgcHMTv9//JBs2yLCwsprNTdE8cpC/RQ/9UD7HUKAYGAXcFQU+ItpoFhLwhfLr/tJ92PN/I
      9wCnkWVZRKcHWdv1Inti7xL2hWmvWkBNoPaovzOVSaaQJlNIky6kSRdSZItZMsU0pmnic/lp
      qIjQWBGhOdRGYzBCYzBCbUV9eYgxOjrK4cOH6ejowO1209PTQ0dHB/v27SMSiVBTU0MmkyHS
      EmFoKkr/VC898S76p3qYzk/hdrmpcAcJ+yoJecOEvOFPdBHZhUICcJoMzwzxatcL7Bl7h6A3
      RHvVgtKW/CS3oJZlYVom2UKmFI5ihnQhRaaQIW/kME0Tt9Mzt7doJhJsIhJspjEYodJXjebQ
      UJZJtpglOj1Ib6KbnngXQzNRilYBj8tD0BMqd/gKdwUOh3bBb+FPRAIwD5ZlMZke5+XOF3h/
      dDc+t5/26gVU+2tOW8eyLAtDGeSNXHlvcWTvkTdK85R6nT40hxNTGRgYKEz8up+Qt3Kuw4fw
      uLyfugPUs0ECcAosyyKRibO++2XeGtqJ1+2lbW6oc7Y62f8fjLHkCKYyaa9eQNAbQtdO3/Uy
      FzIJwCc0nZ1iQ/crvB7dhsul01F9EfUVDee8s819jOe8HZ82chboJE1lEmw89Co7o9vQXS4u
      qruYhmDjeTOskI5/ai7oAJimydtvv83nPvc5isUizz33HEuXLmXnzp3ccMMNFItFDMNgyZIl
      H1tGIhNn46G1vBHdjubUuKh2IQ3ByFFTa4hPr/Nj83WGRKNRVq1ahWVZ7Ny5k8cff5zBwUE2
      bdrEa6+9xl133XXML/8sy2ImO82avatZsfVfeWt4B+01C7im7fM0hVuk819ALug9QD6fp6+v
      j+effx5N02hra2Pv3r3U19eTTqe544472LNnD1dccUX5Pel8ii29G9jatwFLs2iraqcx1CSd
      /gIlB8FzcsUc23o3sbH3FRQmrVXtRELN0vEvcOfVHuDBBx+kt7eXX/3qV6xcuZK1a9dy6623
      8uabb3LFFVcwOzvLPffcQ1NT02mpz7Is9o2+z+HpQbYPbKZg5WitbCcSbj6pOWXEp9959Smn
      UikikQhjY2Mkk0mqq6sZGBjgyiuvZGhoiEwmQ2Vl5Scq07IsMsUMydwMk6lxRmdHiGcmiKXH
      GE+NEc9M4HLptFd30BxuteXlAHZ2Xg2BDh48SDQapaamhkAgQGdnJ1dddRW7d+/m8ssvR9d1
      AoEAkUjkqPcpS1E0CyRzSSZSMUZnR5hMjxNLjzGZHme2kCRnZHFqGrrLQ8AdwOvy4ncHUJaF
      T/dRG6iTU4k2dMwAHDx4kFdeeYXly5cTi8VYtWoVd955J8888wy33norpmkSDAaPOng8E47c
      QHLktWVZzOaTDM8MMZGOMZ4aYyIzznhqjGR+hnQxhVPTcLs8+N0BfC4fPncAv+7Dq/vxuDyy
      hRdHOeYQ6MUXX6StrY39+/ezZcsWlixZwnvvvYfT6WTfvn38+te/Zvv27WekQYYymM5MMZme
      YFvPRrxuHwWVL3X29DhZI4PT6cSre/G4vPh1PwFfgNpQHT63H5/uk/G7OGnH7CmLFy9m3bp1
      1NXV0dHRwYsvvsi1115LX18f7e3t3HvvvezevZsbb7zxE1eoLEU6n2ImN81keoKJ9DgT6Rjx
      zCSTmXESmUlMy8Shlbb8bpeHsDeM3xNgUcUl+HU/Xt2HU3Oe8Jp5IU7ktB8DWJZF3siTKaaZ
      yiQYmx0pde70OPFs6WfWyGJYRZyaE93pxquXtuQelxefXtqKe1xeDGWgO3UZtogz5pTGCkdO
      H/r1AJlimvFUjMn0OInsJBNzB52ZYhocpafGe10+fLoPr+4jUtVUvlFad+qlp3V/zFbczfyn
      vhPieMp7gHg8jtfrBUrPWlVKlQ9CNU076vdYapQfb/wObrcb3eWiJlBLTaAOn8uPrunlm6U9
      rtI0GEdVODcrwrF/PxKEj/nd4Zh7aR3jvccoywGcZNnHL+tI3aenrE++zKezrJNt54X+WZT+
      7pSGQJZlseb91Syqu5TFkT9D1/Ry4UJ8mpxX3wMIcbZd0FeDCnEiEgBhaxIAYWsSAGFrEgBh
      axIAYWvlb4I/7kEHp8vZmrZDKXXGJ/mVOi6cOsoB8Pl8Z/R7AAmA1HE+1nHS7xqO9tE3OExm
      doqDXT0YyuLwYD8FQzEZG6YvOvLRb+z/hMNx/Cs3LdOgv6eb4bFJpibG6B04jGka9A0MgmUR
      H4synS6eeIGOsyIspRjs7yE6HCM5NUF37wCmMunr78eyLEYO99M7MMRxFuOEdQAMDfbSFx0m
      k0zQ2d2DqSyiA/0UTYuRaD/dvYPzrmN0aIBD/VHy6SQHO7spmIqRwwNkCwqw6Ovtm3cdE6ND
      dPX0U8il6ezsIlswGB8eIJkzmRwb4mBXNwVDzauOxPgond295PNZujo7SWWLJGJDTKXy5DOz
      dHV1k59nHTOJcTq7uskXChzqPMhMKsdwdIBc0Tz5ANTUNZJLTjE4Ms5FLWEGBsZIpZLkDIP4
      VBZnNkXuhKv841lApLmFqfgE4/EkfkeRRDLF9MwMFqBySeLpwimXf0RDpInkVJzR8QR1QRdj
      41MkZpIAVNc2UJidxjxBGSdSWx8hNzNNdHSC9kiQwWiMZCpJwVSEq2vIzkxhzLOOqtoGjFSS
      3qFRFrbXMTgwSi49Q6qgiB0eYHwqNY9PoyRYVYsjl6YvOkRbexOHoyOo3DRTGZOxWAyX7sap
      zW+P7g9V4deK9B7qJ9LezsjQUOmzTuU51N2FmrsRaj68/hBVASeH9ndS3b6QseHDZLOzZArW
      yQbAYmiwn6aOi3BRujjO4XQTqig9va+0dZ9XG3FYJn39AyxcVHpGrOZwoHv9+L2lB0iEw6dj
      eGYx0NdPx8JFOCjV4dS9VPhKF+wNRwdobF8wzxulLQ4P9NO84CKcONAcGg6Xm1CgtK4sZeF0
      KArzSoDFyOEB6ts60B0ONM2BQ3MRCgbAUozEJphNxJjN5OdVx/hIlMqmVrxzF0Q6HBrhuWHy
      ZxYvocqjGEuk51VHPDaMK1RP2K/PbcktwpWVpWvnHDoLWusZGo7Now6YjsfIO4PUV/nnlgNC
      /tKFnycZAJN83mA8Nk5jYw3dA5M013tJTKcZj01QGXJTcPvxzuPZT8VCDtNUxMbj1FQGSBoa
      rkKKbCbLSGyCwZEpMvFRzOPvDY9LmQWKRZNYbJz62jCj03lCHpNsJsvQ2Bj5vMFEbHyeewCT
      fL5YWlcN1fQOTRGpdjOdTBMbGyM+OY4rUIlvXrOtKPK5IpOxGE2Rerp6YzQ1BonFU8QnYiy9
      +i+46qorCfnn8yQXi1y+SDw2Tn1zhL7eKJFIDdFYktnJYSZjI0ykTBqqAvNZEPL5AjPxCSob
      Iwz19tLY3MTg8CTpxBgdHa30RWM0NzfMq45cLk96OoG/vonx3i7qGpuZTGaZHB/j/wF4IIUe
      OdlkRAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles By State' width='192'>
      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
    </thumbnail>
    <thumbnail height='58' name='Total number of vehicles' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAA6CAYAAABfwdAwAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAROUlEQVR4nO2ce1AV5/nHP2fPjYuAyk0QFasRNQheiArGtFXrFRM1wYm2aeyk0jYT2tDp
      OI1oqtZJ7LS1KskkcTRjSONMgjHoDyQSFUlUFDESARHFchFB7nLgcDy3Pb8/OGxBuXoQSbqf
      mTMDu+++77O7333e5333fVZhs9lsyMg8JMLjNkDm+40sIBmHkAUk4xCygGQcQhaQjEPIApJx
      CFlAMg4hC0jGIWQByTiELCAZh5AFJOMQsoBkHEIWkIxDyAKScYgfvIDqMjNJ8vAgUaEgf8uW
      x2KDobyc5FGjem1De5tPhYdj1un61F7+li0kKhQkeXhQl5n5kFb3jj4LqM24nn4Pc+IAZp2O
      U+HhDtXRV5quX+f/RowgUaEgY8ECrAbDA2VayspIGTOGRIWCtNDQR27T9wXV4zZgMOAyahTu
      wcHcq6pCl5dHy61buE2Y0KFMY24u9yorAfCZN++R2uMZHs6KxsZH2kZ/0WcP9OSWLUTZbNIv
      ICoKALW7O/POnZO2z8vMRO3u3u8GPwqUzs54Pf00AMaaGu5evvxAmaoTJxDNZgS1Gt8FCwba
      xEHLgMVAd3NyyJg/n8+1WhIVCo76+nL597/HfPeuVCZ/y5bWfvv8eQDqzp+XYoHkUaMwlJcD
      rTe5YPt2jk+eLNX3uVbLiaeeovrkyYeyb8SiRajd3bGJIlUnTnTYZzUYaMzNBcAlMJCh06YB
      YBNFSv/9b1KfeIJDSiWHVCpOhIVJ9vfmWhxSqTizfLl0btAxZspcvbrDsTZRpCotjRNPPdXh
      WubExmJtaenxPHX5+R3uQ/LIkdzYsweb1drxnFtauPa3v5E8cqQUlhzx8uLsihXUnj0rlRsQ
      AZUdPMipOXOoPnUK0WQCwFhdTVF8PKd/8hNaSkv7VF/Ru++St3kzuoICqT7RZKIhO5vMqChq
      z5zps41uEybgEhgIQH1WFqa6Omlfy61b6PLyABg2fTpOI0ZgE0WubtvGxZdfprmoCJsoYrNa
      abh0iYz586lMSem0nZvvvceJsDDpWtisViqTk/n2tdcQzeZubWxr85slS2jIzu5wLcsPHcJU
      X9/t8bVnzpA+d26H+2CoqOC72Fgux8RgE0UARLOZb199ldw//xlDRYV0vKmujoojR7ixe7e0
      7ZELSF9cTN6mTVhbWhgaGsqiq1d5wWIhbP9+BK2Wu999R8Fbb2ETRZ7csoUVjY14zp4NgOfs
      2axobCTKZiPy1i2cAwIAUGq1BERFseDiRZ43GnnBamXOkSNohg3D1NBA0TvvSBejt2g8PaXY
      pqWkhKbr16V9dy9fxlhTg0IQGLFoEQpBoPbrr7n+j39gE0VGr1nDSp2O5RUVeEZEYG1pIf/N
      Nzu9oa6Bgcz98ktWtbSwvLISj5AQAJoKCnoUQGVKCtd27MAmigyfNYsl16+3Xpvbtxn/6qsI
      Gk2Xx5rq68n5wx8wNTQwZNw4Fubm8rzRyKS4OABKExKo/fpryZaK5GQA6dxesFpZVlbG1H/9
      Cxf7fYABEFDFkSPoi4sR1Gqe3LoV90mTUCiVBK5bx+i1awGoTE5Gf/Nmr+uc+MYbhH/2GcPC
      whA0mtYbu2QJnhERALSUlmJpbu6zrb4LFiCo1Zh1OuovXJC2V504gU0U0Xp74zlnDgCln3yC
      Ra/H2d+fJ7duReXmhpOfHxM3bEBQq2kqLKTxypUH2hixZAm+CxagdHbGacQI3IKCALC0tGDr
      xgOJZjPF+/cjGo04+fkx88ABhjzxBADO/v5MfOMNtD4+XR5fl5lJY24uCkFgUlwcHsHBCBoN
      4159Fddx47Do9VQeO9Zqi14v2eI6bhxKV1cUgoDLqFE88frrhO7cKdX7yAVUf/EiAFpfX4bN
      mCFtVwiCFIwaa2o6PPE9YbNaKT90iJOzZnHYxaU1BtJouuw2eovHlCk4+fkB/w2aTXV11Gdl
      AeAeHIzLqFEANF27BoDL6NFofX2lOtwmTUIzfDgWvZ7moiKH7GmPsbqaxu++A1pHaUPuGyX2
      xN2cHESzGdWQIbhNnCht13p7SyNO3dWriGYzQ8aNk7x9wfbtpI4fT05sLHXnzkldXxuPfBjf
      Xb8uqNVSmd4EgG1lv/3tbyk5cKDP3VRPOAcE4BkeTktZmTRsN9y+TUtJCdAaaCudnQGwWSzA
      fwP9zmhpFxg7jM2GaG9ToVSiEPr27LfdB7NOxym7p74fU10dVoMBrY8PM/buJesXv0BfUoK+
      uJgbu3ZxY9cunPz8CNu3D7+lS4EB8EBtIumMtpMS1GqULi69qq+poIDbR45gE0V8Fy5kcUEB
      L1itHaYUHpb2XvFeZSWNubnUX7iAWadD7e4uDfUfCwoFgqr1ebdZrf3+8NyP15w5LCkq4mc5
      OYT8/e8MDQ1FoVRyr7KSnNdfl4LrR+6Bhj/1FGUHD2KsqqLh0iXJNbYfLrd3oz3RVFiIqa4O
      lZsbkzdv7uCO+wOvZ57BydeXe1VV1J49S1NhIQBDxo+X4hUA1x/9iLrz5/GYMoVnvvoKp3bd
      2KNA6+ODR2go+pIS6s+fR3/zphQD9YahISEoBAFBqyXi8GFGLF7cZdn2D/bQ0FCGhoYS9Kc/
      UfLRR1xavx5jVRUtpaU4+/s/eg/k/9xzuI4di2g2k7txI7qCAmxWKzfffZeygwcB8IuMxHXc
      OKB1Uk/j6Qm09snVp05hE8XWwM5qRTN8OEpnZyxNTVQeO4bNasVYU0P+li1UffWVw/a2zUoD
      lH70kTQy8XrmGTTDh0vlRr34IoJWS2NuLlm//CVN165JQ/mmwkLy4uK48+WXDtvThqBWM/aV
      VxC0WgwVFXz72ms037gBtA7Fi+LjMVZXd3l8W9xkNRjIXr+eiqNHO0wDlCYkkLd5MwAN2dl8
      NXUqN3btouXWLWyiiGgy0XzjRut8kSCgUCqBAfBArmPHErx9O9nr16O7epXjkyd32D80NJRJ
      GzdKfbqgVjPmpZeoOnECs07HuZUrgdb4ZH5mJkOnTcN90iQavv2Wa2+/zbW335b2az09O0xM
      PgxKZ2dGLFpE9cmTkpvubPZ5xMKFjH7xRUo//piqtDS+nDTpgbrCP/vMIVvux2/ZMiZv2tT6
      sKSlkdrOazsHBDDSfq06w8nPj8mbN5O9fj2G8nLOPvfcA2XahwCG8nJyYmPJiY19oJx/ZCRD
      7e8DB2QicfTatcw7exafefOkuQqtjw/jY2L4yenTuIwZ06F8QFQUYfv2MWT8eBSCgEIQ0Hp6
      olAq0QwfzuxPP8UzIgKFUonS2ZkfRUezKDeXodOn94u9Xk8/3eE1TPvZ5zYErZaw/fsJ+/BD
      3IKCpCdS0GgYOnUq0/bswfdnP+sXe9pQCAITN25k7rFj0hQGtF7LgBde6OAhO6PtPrRNI7TV
      6TJqFONjYgjetg2A4TNnEpGUhP9zz0m9QVu5KTt2MOODDxC02tbt8tc5ZBzhB78eSObRIgtI
      xiFkAck4hCwgGYeQBSTjELKAZBxCFpCMQ8gCknEIWUAyDiELSMYhZAHJOMSgTyxsaGggMTGR
      xMRE1Go1Bw4cwKebtb/tMRqNxMbGkmVfktoZ0dHRREdHS/+LosixY8fYv38/t2/fBmDkyJG8
      8sorLF26FKEPKwFFUWT37t188skn0jYfHx/pHERRpKSkhKSkJDIzMykvL8dsNqNUKvH19WX5
      8uX8/Oc/x8W+2K66upp169ZR3c2yjfvbeNQMSgGJokhhYSG7d+/m8uXLWO05S329IHq9njt3
      7vS6vMlkYufOnRw+fBix3Yq/W7dusW3bNvLy8vjjH/+Ippvsh/YUFRVxzL5QvTMMBgN//etf
      ybXnnLVhtVqpqKjggw8+4MKFC+zcuRP3PiRpDhkyBJVqYG7toBRQXl4eMTEx6PV6NBoNgiBg
      7iFnqjOam5tptmdnLF68mO3bt3db/vTp0xw9ehRRFPnpT3/Km2++CcC2bdtIT0/n6NGjTJ8+
      nYULF/bYtsViISEhgYaGBubOnUttbS0FBQUPlHN1dWXlypVERUUxduxY1Go1DQ0NvPXWW6Sn
      p5OTk0NycjJr167Fx8enS0Hu2bOHhIQEACIjIxnew9KO/mJQxkCCIBAUFMSOHTtISUlh4kMu
      W71z5w56vR6A0aNHd1vWaDSSlJSEyWTC29ubmJgY3NzccHNzIyYmBm9vb0wmE0lJSRiNxh7b
      vnr1Kt988w2urq6sXr26U4/g6urKO++8Q1xcHBMmTEBtXz8+bNgwYmJiJBFc6SQ9qD01NTWc
      Pn0aaO1uFwxg6vWg9EDBwcHs3bsXQBLAw1BfXy/d7J4EVFdXR4k9+yIoKAh/f39pn7+/P0FB
      QdTU1FBSUkJdXV2H/fdjMpk4cOAAer2exYsXM/m+VZi9oby8XDr3EHvyYVekpaVRbs8AmT9/
      fre29TeD0gP1F//5z3+kvzdt2kRYWBizZs3i+eefZ//+/TQ1NUn7a2trO3ir9h5DpVJJAtTr
      9dTW1nbb7uXLl7l48WK33qczRFGkqqqKjz/+mLi4OIxGI1OnTiUyMrLLY3Q6HampqYiiiJeX
      F88++2yv2uovBqUH6i+am5sRBKFDQGy1WiktLeW9994jNTWVXbt2EdAuVRdag9D76WxbZxgM
      BhISEjAYDJL36anLu3LlihTzteHi4sJvfvMbXnrpJZycnLo89vTp01y3J2VGRET06Gn7mx+0
      B9qwYQNZWVlkZ2eTnZ1NVlYWhw4dYrY9976kpIQPP/wQURQRRZHerO612WwdBHk/GRkZXLp0
      qc/e536MRiNnzpyh0J5W1BkGg4GUlBREUcTd3Z3Vq1f3aZqhP/hBC+h+BEEgMDCQv/zlL9KT
      mpOTw927dxEEAYVCASCN3NrTtk2hUHR5k/R6PZ9++ikWi4X58+cTbE8P6omQkBAyMjLIysoi
      NTWVrVu3EhAQQH5+Pr/73e+6HHllZWXxnT3dedq0aYwfP75X7fUn/1MCasPFxQUPezryvXv3
      sFgseHl54erqCkBZWRkWexoxtA7Jy8rKgNaRk5eXV6f1njx5kvz8fACOHj3KzJkzCQsL48c/
      /rE011NdXc3SpUulQUJ7BEHA29ubZcuW8f777zN69GhMJhOJiYkPDCZMJhNHjhzBYrHg7OzM
      2rVrB2zup4PNA97iAGE0GsnLy+u0u2lqaqKmpgYADw8PtFotPj4+TLDnWRUWFlLR7rs4FRUV
      UlcyYcKELic079y50233dj9ms7nL8k5OTri5uQHQ2Nj4QByVm5vLRfuHK0JCQh5qpNcf/CAE
      VF9fz6pVqwgLC+NXv/oVer0ei8XCP//5T9asWUNaWpr0BJeVlbF9+3Zphjo8PBwPDw9UKhWr
      Vq1Co9FQU1NDfHw8TU1NNDU1ER8fT01NDRqNhlWrVqFSqTptMzo6Woq32v8yMjKYMmUKgDQZ
      GB0dTUZGBitXruTgwYNUVFRIYtLpdOzbt0+aeBw7dmyHmWiLxcIXX3yBwWBApVKxevVqnO15
      XgPNoByF7d27t1MX3+b+obUriY+PJyQkhNzcXMljjBkzBq1Wi8lkQqlUcvPmTTZu3NhpOzNm
      zGDdunXS/7Nnz+bZZ5/l8OHDpKenk56eLu0TBIEVK1YQYf+yRWdtPgy3b99m586d7Gz3zZ32
      BAYGEhsb26F7Kioq4ty5cwCEhoYyc+bMh2q7PxiUAuoLoiiSkZGBxWIhICCAX//616hUKlQq
      FXv27OH48eN8/vnnFBcXYzQaUavVBAQE8PLLLz/wclSj0bBhwwaCg4N7fJnaWZt9JSIigri4
      OFJSUiguLqbR/mXWNhvXrFnD0qVLOwzjRVEkNTUVnU6HIAgsW7bssXkfAGzfcyorK23Lli2z
      hYeH244fPz5g7T6ONgcj3/sY6MqVK1RXVxMZGTmg74AeR5uDkf8HCS6iUgE0MMoAAAAASUVO
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
